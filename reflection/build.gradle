group 'com.intuit.osgi'
version '1.0-SNAPSHOT'

apply plugin:'application'

mainClassName = "com.intuit.osgi.reflection.Main"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    compile 'org.aspectj:aspectjweaver:1.8.5'

    compile 'org.apache.logging.log4j:log4j-api:2.8.2'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'

    compile 'org.eclipse.jetty:jetty-server:9.3.13.v20161014'
    compile 'org.eclipse.jetty:jetty-client:9.3.13.v20161014'

    compile 'com.google.guava:guava:19.0'

    compile 'commons-io:commons-io:2.4'
    compile 'org.springframework:spring-core:4.1.5.RELEASE'
    compile 'org.springframework:spring-beans:4.1.5.RELEASE'
    compile 'org.springframework:spring-context:4.1.5.RELEASE'
    compile 'org.springframework:spring-aop:4.1.5.RELEASE'
    compile 'org.springframework:spring-jms:4.1.5.RELEASE'

    compile 'org.osgi:org.osgi.core:4.1.0'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {

    zip64 true

    String classPath = "."
    [project(':reflection')].each {
        subproject ->
            from subproject.configurations.compile {
                exclude('**/junit-*.jar')
                into('/')
            }
            subproject.configurations.compile.each {
                File file -> classPath = classPath + ',' + file.name;
            }

    }

    manifest {
        attributes(
                "Bundle-ManifestVersion": "2",
                "Bundle-Name": project.name,
                "Bundle-SymbolicName": "com.intuit.osgi.reflection-test",
                "Bundle-Version": "1.0.0",
                "Bundle-Activator": "com.intuit.osgi.reflection.Main",
                "Import-Package": "org.osgi.framework," +
                        " org.osgi.service.log," +
                        " javax.xml.parsers,javax.xml.transform,javax.xml.transform.sax,javax.xml.transform.dom,org.w3c.dom,javax.xml.validation,javax.xml,javax.naming,javax.management," +
                        " javax.net,javax.crypto.spec,javax.crypto,javax.xml.soap,javax.net.ssl,javax.xml.bind,javax.xml.namespace,org.xml.sax,org.xml.sax.helpers," +
                        " javax.security.auth.x500,javax.naming.ldap,javax.naming.directory,javax.annotation,javax.xml.bind.annotation,javax.xml.xpath,javax.xml.datatype,javax.xml.transform.stream," +
                        " javax.activation,javax.xml.stream,javax.imageio,javax.script",
                "Bundle-Classpath": classPath
        )
    }
}